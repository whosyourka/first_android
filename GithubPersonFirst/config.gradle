ext {
    defaultCon = this.&defaultConfig
    android = [
            compileSdkVersion: 23,
            buildToolsVersion: "23.0.3",
            minSdkVersion    : 11,
            targetSdkVeersion: 23,
    ]
    dependencies = [
            "junit": 'junit:junit:4.12',
            "rxandroid": 'io.reactivex:rxandroid:1.2.0',
            "rxjava": 'io.reactivex:rxjava:1.1.5',
            "autolayout": 'com.zhy:autolayout:1.3.6',
            "appcompat-v7": 'com.android.support:appcompat-v7:23.1.1',
            "support-v4": 'com.android.support:support-v4:23.1.1',
            "recyclerview-v7": 'com.android.support:recyclerview-v7:23.1.1',
            "design": 'com.android.support:design:23.1.1',
            "retrofit2": 'com.squareup.retrofit2:retrofit:2.1.0',
            "okhttp3":  'com.squareup.okhttp3:okhttp:3.3.1',
            "logger":  'com.orhanobut:logger:1.13',
            "umeng":  'com.umeng.analytics:analytics:5.5.3',
            "universalimageloader":  'com.nostra13.universalimageloader:universal-image-loader:1.9.3',
//            "test":  ,
    ]

}
//获取时间戳
//def getDate() {
//    def date = new Date()
//    def formattedDate = date.format('yyyyMMddHHmm')

//    return formattedDate
//}

//从androidManifest.xml中获取版本号
//def getVersionNameFromManifest() {
//    def manifestParser = new com.android.builder.core.DefaultManifestParser()
//    return manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile)
//}

def disableDebugBuild() {
    //project.tasks包含了所有的tasks，下面的findAll是寻找那些名字中带debug的Task。
    //返回值保存到targetTasks容器中
    def targetTasks = project.tasks.findAll { task ->
        task.name.contains("Debug")
    }
    //对满足条件的task，设置它为disable。如此这般，这个Task就不会被执行
    targetTasks.each {
        println "disable debug task  :${it.name}"
        it.setEnabled false
    }
}

def defaultConfig() {
    android.dexOptions {
        incremental true
    }
    android.lintOptions {
        // turn off checking the given issue id's
        disable 'TypographyFractions', 'TypographyQuotes'

        // turn on the given issue id's
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'

        // check *only* the given issue id's
        check 'NewApi', 'InlinedApi'

        // turn off  error occur
        abortOnError false
    }
}
